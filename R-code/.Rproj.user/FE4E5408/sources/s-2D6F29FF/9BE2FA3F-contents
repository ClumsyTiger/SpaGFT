setwd("E:/Dropbox/my published paper/SVG_jixin/Data/")
library(ggplot2)
library(ggalluvial)
library(ggsankey)
data.meta.info <- readxl::excel_sheets("Data table-v2.xlsx")
data.meta.info 

# all nodes 
L500_meta <- readxl::read_excel("Data table-v2.xlsx",sheet = "L500" )
L500_5000_meta <- readxl::read_excel("Data table-v2.xlsx",sheet = "500-5000" )
M5000_meta <- readxl::read_excel("Data table-v2.xlsx",sheet = "M5000" )
all.meta <- unique(c(L500_meta$Technology,L500_meta$Species,L500_meta$Species,L500_meta$Condition,L500_meta$Tissue,
                     L500_5000_meta$Technology,L500_5000_meta$Species,L500_5000_meta$Species,L500_5000_meta$Condition,L500_5000_meta$Tissue,
                     M5000_meta$Technology,M5000_meta$Species,M5000_meta$Species,M5000_meta$Condition,M5000_meta$Tissue))
length(M5000_meta)
set.seed(1)
colors <- Polychrome::alphabet.colors(n = length(all.meta))
all_meta <- data.frame(vec =all.meta, colors =  colors)
# "L500"            "500-5000"        "M5000"
my.cat <- "L500"
my.data.info <- readxl::read_excel("Data table-v2.xlsx",sheet = my.cat)
species.table <- as.data.frame(table(my.data.info$Species))
species.table$anno <- "species"
organ.table <- as.data.frame(table(my.data.info$Tissue))
organ.table$anno <- "organ"
tech.table <- as.data.frame(table(my.data.info$Technology))
tech.table$anno <- "tech"
condition.table <- as.data.frame(table(my.data.info$Condition))
tech.table$anno <- "tech"
condition.table$anno <- "condition"
# species.table <- my.data.info$Species
# organ.table <- my.data.info$Tissue
# tech.table <- my.data.info$Technology
# condition.table <- my.data.info$Condition
all.data.info <- data.frame(species = my.data.info$Species,
                            organ = my.data.info$Tissue,
                            tech = my.data.info$Technology,
                            condition = my.data.info$Condition)
df <- all.data.info %>%
  make_long(tech,species, condition, organ)

# df$x <- factor(df$x ,levels = c("tech", "species", "condition", "organ"))
# sanky
p.sanky <- ggplot(df, aes(x = x, next_x = next_x, node = node, next_node = next_node, fill = factor(node), label = node)) +
  geom_alluvial(flow.alpha = .8,node.color = "gray30") +
  # geom_alluvial_text(size = 3, color = "white") +
  scale_fill_viridis_d() +
  theme_alluvial(base_size = 18) +
  labs(x = NULL) +
  theme(legend.position = "none",
        plot.title = element_text(hjust = .5)) +
   scale_fill_manual(breaks = all_meta$vec,
                     values = all_meta$colors)
ggsave(p.sanky,filename = paste0("sankey_",my.cat,".tiff"),device = "tiff",units = "in",width = 8,height = 5)
# stack bar plot
stackbar <- rbind(tech.table,species.table,condition.table,organ.table)

p.stackbar <- ggplot(stackbar, aes(fill=Var1, y=Freq, x=anno)) + 
  geom_bar(position="stack", stat="identity") +
  scale_fill_manual(breaks = all_meta$vec,
                    values = all_meta$colors)+scale_x_discrete(limits = c("tech","species","condition","organ"))+
  theme_classic()
p.stackbar 
ggsave(p.stackbar,filename = paste0("StackBar_",my.cat,".tiff"),device = "tiff",units = "in",width = 8,height = 5)
# plot species information
p.species <- ggplot(species.table, aes(x="", y=Freq, fill=Var1)) +
  geom_bar(stat="identity", width=1,color ="black") +
  coord_polar("y", start=0)+ 
  scale_fill_manual(breaks = all_meta$vec,
                    values = all_meta$colors)+
  theme_void()+ggtitle(paste0(species.table$Var1,": ",species.table$Freq,collapse = " "))

ggsave(p.species,filename = paste0("species_",my.cat,".tiff"),device = "tiff",units = "in",width = 5,height = 5)

# plot organ information
p.organ <- ggplot(organ.table, aes(x="", y=Freq, fill=Var1)) +
  geom_bar(stat="identity", width=1,color ="black") +
  coord_polar("y", start=0)+ 
  scale_fill_manual(breaks = all_meta$vec,
                    values = all_meta$colors)+
  theme_void()+ggtitle(paste0(organ.table$Var1,": ",organ.table$Freq,collapse = " "))
ggsave(p.organ,filename = paste0("organ_",my.cat,".tiff"),device = "tiff",units = "in",width = 5,height = 5)

# plot condition information
p.condition <- ggplot(condition.table, aes(x="", y=Freq, fill=Var1)) +
  geom_bar(stat="identity", width=1,color ="black") +
  coord_polar("y", start=0)+ 
  scale_fill_manual(breaks = all_meta$vec,
                    values = all_meta$colors)+
  theme_void()+ggtitle(paste0(condition.table$Var1,": ",condition.table$Freq,collapse = " "))
ggsave(p.condition,filename = paste0("condition_",my.cat,".tiff"),device = "tiff",units = "in",width = 5,height = 5)

# plot condition information
p.tech <- ggplot(tech.table, aes(x="", y=Freq, fill=Var1)) +
  geom_bar(stat="identity", width=1,color ="black") +
  coord_polar("y", start=0)+ 
  scale_fill_manual(breaks = all_meta$vec,
                    values = all_meta$colors)+
  theme_void()+ggtitle(paste0(tech.table$Var1,": ",tech.table$Freq,collapse = " "))
ggsave(p.tech,filename = paste0("tech_",my.cat,".tiff"),device = "tiff",units = "in",width = 5,height = 5)

# sequencing depth
# L500_meta 
# L500_5000_meta 
# M5000_meta 
L500_meta$cat <- "L500"
L500_5000_meta$cat <- "L500_5000"
M5000_meta$cat <- "M5000"
my.meta <- rbind(L500_meta,L500_5000_meta,M5000_meta)

my.meta$ID <- paste0("sample",1:nrow(my.meta))
# my.meta$Technology <- "Technology"
# my.meta$Species <- "Species"
# my.meta$Condition <- "Condition"
# my.meta$Tissue <- "Tissue"

my.meta <- my.meta[,c("ID","cat","mean read per spots","mean gene per spots")]
# my.meta.gene <- my.meta[,c("ID","Technology","Species","Condition","Tissue","mean gene per spots")]
my.meta.melt <- reshape2::melt(my.meta, id.vars = c("ID","cat"))

my.meta.melt.gene <- my.meta.melt[my.meta.melt$variable == "mean gene per spots",]
my.meta.melt.read<- my.meta.melt[my.meta.melt$variable == "mean read per spots",]
p.gene <- ggplot(my.meta.melt.gene, aes(x=cat, y=log10(value), fill=variable)) + 
  geom_violin(width = 0.6)+
  geom_jitter(shape=16,size = 1, position=position_jitter(0.2))+ theme_classic()+ 
  scale_fill_manual(values = as.character(jcolors::jcolors("pal10"))[c(1,7)],breaks = c("mean read per spots","mean gene per spots"))
p.gene
ggsave(p.gene,filename = paste0("violin_gene_number.png"),device = "png",units = "in",width = 9,height = 2,dpi = 300)

p.read <- ggplot(my.meta.melt.read, aes(x=cat, y=log10(value), fill=variable)) + 
  geom_violin(width = 0.6)+
  geom_jitter(shape=16,size = 1, position=position_jitter(0.2))+ theme_classic()+ 
  scale_fill_manual(values = as.character(jcolors::jcolors("pal10"))[c(1,7)],breaks = c("mean read per spots","mean gene per spots"))
p.read
ggsave(p.read,filename = paste0("violin_reads_number.png"),device = "png",units = "in",width = 9,height = 2,dpi = 300)

p.all <- ggplot(my.meta.melt, aes(x=cat, y=log10(value), fill=variable)) + 
  geom_violin(width = 0.6)+
  geom_jitter(shape=16,size = 1, position=position_jitter(0.2))+ theme_classic()+ 
  scale_fill_manual(values = as.character(jcolors::jcolors("pal10"))[c(1,7)],breaks = c("mean read per spots","mean gene per spots"))
p.all
ggsave(p.all,filename = paste0("violin_all_number.png"),device = "png",units = "in",width = 9,height = 2,dpi = 300)

