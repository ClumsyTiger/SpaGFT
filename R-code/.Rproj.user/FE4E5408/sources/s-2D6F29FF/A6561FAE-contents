# preload function 
jaccard_similarity <- function(A, B) {
  intersection = length(intersect(A, B))
  union = length(A) + length(B) - intersection
  return (intersection/union)
}

#
setwd("e:/spaGFT/")
# set up markers
my.marker <- openxlsx::read.xlsx("marker_cortical layer marker.xlsx")
table(my.marker$species)
human_mouse_marker <- my.marker[my.marker$species=="H" | my.marker$species=="MH",]
human_mouse_marker <- human_mouse_marker$`gene_symbol(H)`
# set up sample names
#  check data
my.sample.list <- read.table("e:/spaGFT/benchmarking/batch_names/all_names.txt")
my.sample.list <- my.sample.list$V1
# my.sample.name <- unique(unlist(sapply(strsplit(my.sample.list,split = "_"),"[",1)))
# my.technology <- unique(unlist(sapply(strsplit(my.sample.list,split = "_"),"[",2)))
# my.sample.annotation <- unique(unlist(sapply(strsplit(my.sample.list,split = "_"),"[",3)))

my.sample.technology.name <- gsub("_expression.h5seurat","_SPARK-X_default.csv",my.sample.list)
my.list <- list.files(path = "e:/spaGFT/SPARK-X/",pattern = ".csv")
setdiff(my.sample.technology.name,my.list)
# look at human brain
# "1_1" = "CT1", 
# "18_64" = "CT2", 
# "2_3" = "AD1",
# "2_5" = "CT3",
# "2_8" = "AD2",
# "T4857" = "AD3"
my.sample.list.filter <- grep("HumanBrain",my.sample.list,value = T)
my.sample.list.filter <- my.sample.list.filter[c(-2,-16)]

my.sample.name <- gsub("_expression.h5seurat","",my.sample.list.filter)

# setup software
my.software <- c("MERINGUE","SpaGCN","SPARK","SPARK-X","SpatialDE")
# Jaccard, Szymkiewicz–Simpson coefficient, Tversky index, Sørensen coefficient, F1

my.score.matrix <- matrix(rep("NA",5* length(my.sample.name)),nrow = length(my.sample.name))
rownames(my.score.matrix) <- my.sample.name
colnames(my.score.matrix) <- my.software
my.score_Jaccard <- my.score.matrix
my.score_OverlapCoef <-my.score.matrix
my.score_TverskyIndex <- my.score.matrix
for (i in 1:length(my.software)){
  tmp.software <- my.software[i]
  print(i)
  for (j in 1:length(my.sample.name)){
    tmp.sample.name <- my.sample.name[j]
    file.name <- file.path("e:/spaGFT/",
                           tmp.software,
                           paste0(tmp.sample.name,
                                  "_",tmp.software,"_default.csv"))
    tmp_results <- read.csv(file.name,row.names = 1)
    # filter 
    if (tmp.software == "MERINGUE"){
      out_results <- tmp_results[tmp_results$p.adj < 0.05,]
      } 
    if (tmp.software == "SpaGCN"){
      out_results <- tmp_results[tmp_results$pvals_adj <0.05,]
      out_results <- out_results[!duplicated(out_results$genes),]
      rownames(out_results) <- out_results$genes
      } 
    if (tmp.software == "SPARK"){
      out_results <- tmp_results[tmp_results$adjusted_pvalue <0.05,]
      } 
    if (tmp.software == "SPARK-X"){
      out_results <- tmp_results[tmp_results$adjustedPval <0.05,]
      } 
    if (tmp.software == "SpatialDE"){
      out_results <- tmp_results[tmp_results$BIC > 0 & tmp_results$qval <0.05,]
      rownames(out_results) <- out_results$g
      }
    predicted.gene <- rownames(out_results)
    # print(paste0(tmp.software, " : ", length(predicted.gene)," : ",predicted.gene[1]))
    sore_Jaccard <- jaccard_similarity(predicted.gene,human_mouse_marker)
    score_Overlap_coef <- ribiosUtils::overlapCoefficient(predicted.gene,human_mouse_marker)
    score_TverskyIndex <- tcR::tversky.index(predicted.gene,human_mouse_marker)
    my.score_Jaccard[tmp.sample.name,tmp.software] <- sore_Jaccard
    my.score_OverlapCoef[tmp.sample.name,tmp.software]<- score_Overlap_coef
    my.score_TverskyIndex[tmp.sample.name,tmp.software] <- score_TverskyIndex
  }
}







