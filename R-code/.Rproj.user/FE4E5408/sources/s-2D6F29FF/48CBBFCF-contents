setwd("e:/Dropbox/my published paper/SVG_jixin/results/03312022-lymphnode/")
library(umap)
library(Seurat)

sample_name <- "151673"
file_name_spectrum <- paste0("e:/Dropbox/my published paper/SVG_jixin/results/03312022-lymphnode/151673_frequency_domain.csv")
file_name_gene_siml <- paste0("e:/Data and Code/Source data/original/",sample_name)
expression_df <- Load10X_Spatial(data.dir = file_name_gene_siml, filename = "filtered_feature_bc_matrix.h5")
expression_df <- NormalizeData(expression_df)
spectrum_df <- read.csv(file_name_spectrum,header = T,row.names = 1)
cluster_info <- read.csv("e:/Dropbox/my published paper/SVG_jixin/results/03312022-lymphnode/SpaGFT_all_151673.csv",row.names = 1)
gene_score <- read.csv("e:/Dropbox/my published paper/SVG_jixin/results/03312022-lymphnode/151673_gene_score.csv",row.names = 1)
gene_score$smooth_score <- gene_score$smooth_score/max(gene_score$smooth_score)

spectrum_df[1:5,1:5]
hist(as.numeric(spectrum_df[1,]))

UMAP.cor <- uwot::umap(t(spectrum_df))
UMAP.cor <- as.data.frame(UMAP.cor)
UMAP.cor[1:5,]
cluster_info <- cluster_info[rownames(UMAP.cor),]
gene_score <- gene_score[rownames(UMAP.cor),]

df_plot <- cbind(cluster_info, x = UMAP.cor$V1, y= UMAP.cor$V2, score = gene_score )
df_plot[1:5,]

ggplot(df_plot,aes(x = x, y = y, color = as.factor(louvain)))+geom_point()+ jcolors::scale_colour_jcolors(palette = "pal8")+
  facet_wrap(~louvain)

table(df_plot$louvain)

cluster.2.df = df_plot[df_plot$louvain=="0",]
cluster.2.df <- as.data.frame(na.omit(cluster.2.df))
dim(cluster.2.df)
cluster.2.df = cluster.2.df[order(cluster.2.df$score.smooth_score,decreasing = T),]

gene_name <- rownames(cluster.2.df)[1:9]
#SpatialFeaturePlot(expression_df,features = gene_name,image.alpha = 0)+ theme(legend.position = "none")
#
cluster.2.df[gene_name,c("score.smooth_score", "score.SVG_Rank")]
plot_dim_df <- data.frame(row.names = colnames(expression_df),
                          x = expression_df@images$slice1@coordinates$row,
                          y = expression_df@images$slice1@coordinates$col,
                          t(as.matrix(expression_df@assays$Spatial@data)[gene_name,])
)

#
library(ggplot2)
library(cowplot)

p1 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,3])) + 
    geom_point(size  = 2) + 
    scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                               axis.text=element_blank(),
                                                                               axis.ticks=element_blank())

p2 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,4])) + 
  geom_point(size  = 2) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p3 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,5])) + 
  geom_point(size  = 2) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p4 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,6])) + 
  geom_point(size  = 2) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p5 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,7])) + 
  geom_point(size  = 2) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p6 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,8])) + 
  geom_point(size  = 2) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p7 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,9])) + 
  geom_point(size  = 2) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())


p8 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,10])) + 
  geom_point(size  = 2) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p9 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,11])) + 
  geom_point(size  = 2) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
cowplot::plot_grid(p1,p2,p3,p4,p5,p6,p7,p8,p9)









# lymphnode
setwd("e:/Dropbox/my published paper/SVG_jixin/results/03312022-lymphnode/")
library(umap)

file_name_spectrum <- paste0("e:/Dropbox/my published paper/SVG_jixin/results/03312022-lymphnode/lymp_frequency_domain.csv")
file_name_gene_siml <- paste0("e:/Data and Code/Source data/Human_lymphnode/")
expression_df <- Load10X_Spatial(data.dir = file_name_gene_siml, filename = "filtered_feature_bc_matrix.h5")
expression_df <- NormalizeData(expression_df)
spectrum_df <- read.csv(file_name_spectrum,header = T,row.names = 1)
cluster_info <- read.csv("e:/Dropbox/my published paper/SVG_jixin/results/03312022-lymphnode/SpaGFT_all_lymp.csv",row.names = 1)
gene_score <- read.csv("e:/Dropbox/my published paper/SVG_jixin/results/03312022-lymphnode/lymp_gene_score.csv",row.names = 1)
gene_score$smooth_score <- gene_score$smooth_score/max(gene_score$smooth_score)

spectrum_df[1:5,1:5]
hist(as.numeric(spectrum_df[1,]))

UMAP.cor <- uwot::umap(t(spectrum_df))
UMAP.cor <- as.data.frame(UMAP.cor)
UMAP.cor[1:5,]
cluster_info <- cluster_info[rownames(UMAP.cor),]
gene_score <- gene_score[rownames(UMAP.cor),]

df_plot <- cbind(cluster_info, x = UMAP.cor$V1, y= UMAP.cor$V2, score = gene_score,gene.name = rownames(cluster_info))
df_plot[1:5,]

ggplot(df_plot,aes(x = x, y = y, color = as.factor(louvain)))+geom_point()+ jcolors::scale_colour_jcolors(palette = "pal8")+
  facet_wrap(~louvain)

table(df_plot$louvain)

cluster.2.df = df_plot[df_plot$louvain=="0",]
# commentable
# germinal_center_marker_Tcell <- intersect(c("CD3E","CD8","CD4","FOXP3","CD3G","CD28","CTLA4","ITGAM" ),
#                                     rownames(cluster.2.df))
germinal_center_marker_Tcell <- intersect(c("CXCR5","CD4","BCL6","CD4","CPT1A" ),rownames(df_plot))
                                        
germinal_center_marker_Tcell
cluster.2.df <- df_plot[germinal_center_marker_Tcell,]
#
cluster.2.df <- as.data.frame(na.omit(cluster.2.df))
dim(cluster.2.df)
cluster.2.df = cluster.2.df[order(cluster.2.df$score.smooth_score,decreasing = T),]

gene_name <- rownames(cluster.2.df)[1:4]

#SpatialFeaturePlot(expression_df,features = gene_name,image.alpha = 0)+ theme(legend.position = "none")
#
cluster.2.df[gene_name,c("score.smooth_score", "score.SVG_Rank")]
gene_name <- gsub("[.]1","",gene_name)
plot_dim_df <- data.frame(row.names = colnames(expression_df),
                          x = expression_df@images$slice1@coordinates$row,
                          y = expression_df@images$slice1@coordinates$col,
                          t(as.matrix(expression_df@assays$Spatial@data)[gene_name,])
)

#
library(ggplot2)
library(cowplot)

p1 <- ggplot(plot_dim_df, aes(x = y, y = -x, color = plot_dim_df[,3])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())+ggtitle(colnames(plot_dim_df)[3])

p2 <- ggplot(plot_dim_df, aes(x = y, y = -x, color = plot_dim_df[,4])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())+ggtitle(colnames(plot_dim_df)[4])
p3 <- ggplot(plot_dim_df, aes(x = y, y = -x, color = plot_dim_df[,5])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())+ggtitle(colnames(plot_dim_df)[5])
p4 <- ggplot(plot_dim_df, aes(x = y, y = -x, color = plot_dim_df[,6])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())+ggtitle(colnames(plot_dim_df)[6])
p5 <- ggplot(plot_dim_df, aes(x = x, y = -y, color = plot_dim_df[,7])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())+ggtitle(colnames(plot_dim_df)[7])
p6 <- ggplot(plot_dim_df, aes(x = x, y = -y, color = plot_dim_df[,8])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())+ggtitle(colnames(plot_dim_df)[8])
p7 <- ggplot(plot_dim_df, aes(x = x, y = -y, color = plot_dim_df[,9])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())+ggtitle(colnames(plot_dim_df)[9])


p8 <- ggplot(plot_dim_df, aes(x = x, y = -y, color = plot_dim_df[,10])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p9 <- ggplot(plot_dim_df, aes(x = x, y = -y, color = plot_dim_df[,11])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
cowplot::plot_grid(p1,p2,p3,p4,p5,p6,p7,p8,p9)
cowplot::plot_grid(p1,p2,p3,p4)

# find germinal center
cluster.2.df.2 <- as.data.frame(na.omit(cluster.2.df))
cluster.2.df.2$shape <- ifelse(rownames(cluster.2.df.2) %in% gene_name, 2,0)
ggplot(cluster.2.df.2,aes(x = x, y = y, color = as.factor(louvain),size = shape))+
  geom_point()+ 
  jcolors::scale_colour_jcolors(palette = "pal8")




# mouse brain
file_name_gene_siml <- paste0("e:/Data and Code/Source data/mouse brain visium/Visium1.0/Mouse Brain Section (Coronal)/")
expression_df <- Load10X_Spatial(data.dir = file_name_gene_siml, filename = "filtered_feature_bc_matrix.h5")
expression_df <- NormalizeData(expression_df)

#gene_score <- read.csv("e:/Dropbox/my published paper/SVG_jixin/results/03312022-lymphnode/SpaGFT_MouseBrain_clustering.csv",row.names = 1)
gene_score <- read.csv("e:/Dropbox/my published paper/SVG_jixin/results/03312022-lymphnode/PCA_MouseBrain_clustering.csv",row.names = 1)

gene_name <- rownames(gene_score)[gene_score$louvain== 0][1:9]

#SpatialFeaturePlot(expression_df,features = gene_name,image.alpha = 0)+ theme(legend.position = "none")
#

gene_name <- gsub("[.]1","",gene_name)
plot_dim_df <- data.frame(row.names = colnames(expression_df),
                          x = expression_df@images$slice1@coordinates$row,
                          y = expression_df@images$slice1@coordinates$col,
                          t(as.matrix(expression_df@assays$Spatial@data)[gene_name,])
)

#
library(ggplot2)
library(cowplot)

p1 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,3])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())

p2 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,4])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p3 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,5])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p4 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,6])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p5 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,7])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p6 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,8])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p7 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,9])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())


p8 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,10])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
p9 <- ggplot(plot_dim_df, aes(x = x, y = y, color = plot_dim_df[,11])) + 
  geom_point(size  = 1) + 
  scale_color_gradientn(colours = viridis::viridis(10)) + theme_void()+theme(legend.position = "none",axis.title=element_blank(),
                                                                             axis.text=element_blank(),
                                                                             axis.ticks=element_blank())
cowplot::plot_grid(p1,p2,p3,p4,p5,p6,p7,p8,p9)

# mouse brain UMAP

umap_df <- read.csv("mousebrain_GFT_coord_umap.csv")
umap_df_label <- read.csv("mousebrain_GFT_label.csv")


ggplot.df <- data.frame(row.names = umap_df_label$X, 
                        FM_cluster = umap_df_label$SVG_cluster,
                        UMAP1= umap_df$X0, UMAP2 = umap_df$X1)
ggplot.df <- ggplot.df[order(ggplot.df$FM_cluster,decreasing = T),]
ggplot(ggplot.df , aes(x = UMAP1, y = UMAP2, color = FM_cluster)) + 
  geom_point(size  = 1.5,alpha = 1) + scale_color_manual(breaks = c("0","1","2","3","4","5","6","7","Non-SVG"),
                                             values = c(as.character(jcolors::jcolors(palette = "pal8")[1:8]),"#929191"))+theme_classic()
  
######################
umap_df <- read.csv("mousebrain_PCA_coord_umap.csv")
umap_df_label <- read.csv("mousebrain_PCA_label.csv")

ggplot.df <- data.frame(row.names = umap_df_label$X, 
                        PCA_cluster = umap_df_label$SVG_cluster,
                        UMAP1= umap_df$X0, UMAP2 = umap_df$X1)
ggplot.df <- ggplot.df[order(ggplot.df$PCA_cluster,decreasing = T),]
ggplot(ggplot.df , aes(x = UMAP1, y = UMAP2, color = PCA_cluster)) + 
  geom_point(size  = 1.5,alpha = 1) + scale_color_manual(breaks = c("0","1","2","3","4","5","6","7","Non-SVG"),
                                                         values = c(as.character(jcolors::jcolors(palette = "pal8")[1:8]),"#929191"))+theme_classic()





# human brain UMAP

umap_df <- read.csv("SpaGFT_151673_coord_umap.csv")
umap_df_label <- read.csv("SpaGFT_151673_label.csv")


ggplot.df <- data.frame(row.names = umap_df_label$X, 
                        FM_cluster = umap_df_label$SVG_cluster,
                        UMAP1= umap_df$X0, UMAP2 = umap_df$X1)
ggplot.df <- ggplot.df[order(ggplot.df$FM_cluster,decreasing = T),]
ggplot(ggplot.df , aes(x = UMAP1, y = UMAP2, color = FM_cluster)) + 
  geom_point(size  = 1.5,alpha = 1) + scale_color_manual(breaks = c("0","1","2","3","4","Non-SVG"),
                                                         values = c(as.character(jcolors::jcolors(palette = "pal8")[1:5]),"#929191"))+theme_classic()

######################
umap_df <- read.csv("PCA_151673_coord_umap.csv")
umap_df_label <- read.csv("PCA_151673_label.csv")

ggplot.df <- data.frame(row.names = umap_df_label$X, 
                        PCA_cluster = umap_df_label$SVG_cluster,
                        UMAP1= umap_df$X0, UMAP2 = umap_df$X1)
ggplot.df <- ggplot.df[order(ggplot.df$PCA_cluster,decreasing = T),]
ggplot(ggplot.df , aes(x = UMAP1, y = UMAP2, color = PCA_cluster)) + 
  geom_point(size  = 1.5,alpha = 1) + scale_color_manual(breaks = c("0","1","2","3","4","Non-SVG"),
                                                         values = c(as.character(jcolors::jcolors(palette = "pal8")[1:5]),"#929191"))+theme_classic()


