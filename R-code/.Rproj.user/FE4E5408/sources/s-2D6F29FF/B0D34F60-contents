setwd("e:/Dropbox/my published paper/SVG_jixin/results/03022022-read-data/GeneModule/")
library(Seurat)
library(scales)
library(ggplot2)
sample_name <- "151673"
spec_range <- c(2:50)
file_name_gene_siml <- paste0("e:/Data and Code/Source data/original/",sample_name)
expression_df <- Load10X_Spatial(data.dir = file_name_gene_siml, filename = "filtered_feature_bc_matrix.h5")

SVG_list <- read.csv("e:/Dropbox/my published paper/SVG_jixin/results/03022022-read-data/GeneModule/HumanBrain_12_151673_geneModule_res2.csv")
my.gene <- SVG_list$X[which(SVG_list$louvain == "0")]


for (i in 1:length(my.gene)){
  Sys.sleep(1)
  gene_name <- my.gene[i]
  #
  x_y <- expression_df@images$slice1@coordinates$row
  
  
  plot_dim_df <- data.frame(row.names = colnames(expression_df),
                            x = expression_df@images$slice1@coordinates$row,
                            y = expression_df@images$slice1@coordinates$col,
                            Gene = expression_df@assays$Spatial@data[gene_name,]
  )
  
  p_SVG <- ggplot(plot_dim_df, aes(x = x, y = y, color = log1p(Gene))) + 
    geom_point(size  = 2) + 
    scale_color_gradientn(colours = viridis::magma(10)) + theme_void()+ theme(legend.position = "none",axis.title=element_blank(),
                                                                              axis.text=element_blank(),
                                                                              axis.ticks=element_blank())
  print(p_SVG)
  print(my.gene[i])
}


Ranking_SVG <- read.csv("e:/Dropbox/my published paper/SVG_jixin/results/03022022-read-data/SV_Score/HumanBrain_12_151673_SV_score.csv")
Ranking_SVG[1:5,]


ggplot(Ranking_SVG, aes(x = SVG_Rank, y = smooth_score)) + 
  geom_point(size  = 1.5,color = c(rep("#B10000",1372),
                                   rep("#929191",nrow(Ranking_SVG)-1372))) + 
  geom_hline(yintercept=0.5, linetype="dashed", 
             color = "#B10000", size=1)+
   theme_bw()+ theme(legend.position = "none",
                     axis.text.y = element_text(size = 25,face = "bold",vjust = 0),
                     axis.title.y=element_blank(),
                     axis.title.x=element_blank(),
                                              axis.text.x=element_blank(),
                                              axis.ticks.x=element_blank())










